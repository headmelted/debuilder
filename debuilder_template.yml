jobs:
- job: ${{ parameters.arch }}
  pool:
   vmImage: 'Ubuntu 16.04'
  steps:
  - script: sudo apt-get install -y debootstrap qemu-user-static
    displayName: 'Installing debootstrap and QEMU'
- script: sudo debootstrap --foreign --verbose --arch=$ARCH variant=minbase stretch rootfs
    displayName: 'Using debootstrap --foreign to create rootfs'
  - script: |
      cd rootfs;
      sudo mount --bind /dev dev/
      sudo mount --bind /sys sys/
      sudo mount --bind /proc proc/
      sudo mount --bind /dev/pts dev/pts/
      cd ..;
    displayName: Entering chroot to mount dev, sys, proc and dev/pts
  - script: sudo cp /usr/bin/qemu-$(DEBUILDER_QEMU_ARCH)-static rootfs/usr/bin/qemu-$(DEBUILDER_QEMU_ARCH)-static
    displayName: Copying QEMU into rootfs for debootstrap --second-stage
  - script: sudo chmod +x rootfs/usr/bin/qemu-$(DEBUILDER_QEMU_ARCH)-static
    displayName: Marking static [rootfs/usr/bin/qemu-$(DEBUILDER_QEMU_ARCH)-static] as executable
  - script: sudo chroot rootfs /debootstrap/debootstrap --second-stage --verbose
    displayName: Manually setting up debootstrap
  - script: sudo rm rootfs/usr/bin/qemu-$(DEBUILDER_QEMU_ARCH)-static
    displayName: Deleting QEMU from rootfs
  - script: sudo chroot rootfs /debootstrap/debootstrap --second-stage --verbose
    displayName: Manually setting up debootstrap
  - script: sudo tar -zcvf $(Build.BinariesDirectory)/debuilder_rootfs_$(DEBUILDER_RELEASE)_$(DEBUILDER_VARIANT)_$(DEBUILDER_ARCH).tar.gz rootfs
    displayName: 'Compressing rootfs for $(DEBUILDER_RELEASE) $(DEBUILDER_VARIANT) $(DEBUILDER_ARCH)'
